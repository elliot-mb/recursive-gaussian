import java.util.ArrayList;
import java.util.Arrays;

public class Runner {
    public static void main(String[] args){
        Matrix A = new Matrix(new ArrayList<Double>(Arrays.asList( //enter GE matrix as a flat array
                55d,-31d,63d,-56d,-98d,47d,57d,-86d,16d,-71d,-18d,-79d,63d,-76d,39d,23d,51d,98d,-64d,-20d,-12960d,
                -75d,40d,-5d,34d,35d,-52d,58d,-63d,-94d,100d,-68d,-73d,30d,10d,24d,5d,13d,-84d,59d,50d,8165d,
                51d,76d,-86d,3d,-68d,-15d,98d,80d,40d,-59d,41d,-46d,-54d,-10d,-47d,85d,19d,96d,80d,-18d,-13268d,
                71d,-3d,68d,-17d,-66d,25d,-96d,-51d,21d,-6d,-65d,-51d,-1d,70d,54d,60d,37d,-60d,-38d,33d,1824d,
                -36d,19d,-57d,79d,-26d,-54d,44d,-68d,-54d,82d,-24d,-22d,-11d,85d,-26d,-53d,-59d,62d,-89d,-88d,5063d,
                87d,-40d,44d,-41d,-44d,11d,-5d,-78d,81d,73d,90d,-23d,78d,-9d,-4d,-47d,-58d,7d,71d,65d,-13001d,
                -22d,4d,94d,-79d,-85d,-75d,-36d,-78d,74d,-80d,97d,-93d,52d,43d,-62d,96d,-73d,-38d,-72d,62d,-22001d,
                93d,-81d,-25d,100d,-89d,-70d,-3d,-21d,-34d,-43d,77d,-88d,60d,33d,-51d,63d,-11d,-73d,-27d,88d,-12161d,
                26d,-42d,88d,6d,-86d,-83d,63d,97d,21d,71d,-38d,46d,69d,20d,36d,76d,-48d,-58d,-32d,-65d,-18492d,
                -57d,-63d,75d,-77d,-79d,50d,-29d,14d,86d,-58d,14d,17d,47d,-2d,-47d,74d,-80d,23d,82d,68d,-5777d,
                100d,1d,14d,62d,-94d,4d,-46d,-72d,-64d,-75d,-90d,-32d,-70d,38d,-91d,-46d,51d,29d,-78d,-84d,13957d,
                -96d,-97d,93d,-4d,-27d,-41d,36d,24d,-3d,-20d,65d,-58d,-81d,-97d,-48d,11d,80d,33d,78d,42d,4306d,
                6d,16d,96d,66d,-79d,85d,-27d,-59d,88d,30d,-62d,-98d,-95d,-98d,61d,78d,-38d,39d,-35d,31d,3241d,
                -33d,-85d,7d,48d,-24d,-2d,61d,48d,-21d,13d,-24d,-62d,-44d,-90d,31d,18d,32d,58d,-60d,-43d,5040d,
                60d,-33d,-4d,94d,-98d,93d,-89d,41d,-17d,-34d,45d,-6d,-27d,40d,80d,-89d,-17d,-6d,11d,34d,6313d,
                -47d,-43d,30d,31d,84d,-12d,94d,-6d,-40d,98d,29d,-37d,21d,5d,26d,31d,60d,-24d,-71d,23d,-5050d,
                -72d,55d,81d,-66d,-39d,64d,-20d,-25d,45d,-55d,13d,-39d,-63d,-45d,27d,-61d,90d,-53d,2d,-38d,9369d,
                48d,91d,-35d,-36d,-40d,-83d,-32d,-80d,17d,-49d,-13d,61d,-29d,39d,-81d,40d,-20d,41d,-77d,-31d,-9267d,
                -60d,-12d,-16d,94d,-13d,70d,86d,88d,54d,33d,3d,67d,-41d,-67d,15d,4d,40d,-32d,40d,-2d,66d,
                14d,-42d,54d,20d,46d,-92d,41d,45d,22d,-42d,85d,96d,-57d,50d,40d,-30d,50d,78d,5d,-84d,-16710d
        )));
        System.out.println(A);

        Eliminator e = Eliminator.getInstance(A);
        System.out.println(e);
    }
}
